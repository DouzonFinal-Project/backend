name: Backend CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-2
      ECR_REPO: 373317459179.dkr.ecr.ap-northeast-2.amazonaws.com/app/backend
      INSTANCE_TAG_ROLE: backend

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/GHA_OIDC_ECR_SSM_ROLE
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set derived envs
        run: |
          echo "BACK_IMAGE=${ECR_REPO}:latest" >> $GITHUB_ENV
          echo "BACK_IMAGE_SHA=${ECR_REPO}:${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build & Push
        working-directory: ./backend
        run: |
          docker build -t "$BACK_IMAGE" -t "$BACK_IMAGE_SHA" .
          docker push "$BACK_IMAGE"
          docker push "$BACK_IMAGE_SHA"

      - name: Deploy via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy backend" \
            --targets "Key=tag:Role,Values=${INSTANCE_TAG_ROLE}" \
            --parameters commands='[
              "set -eux",
              "aws --region '"${AWS_REGION}"' ecr get-login-password | docker login --username AWS --password-stdin '"${ECR_REPO%/*}"'",
              "cd /opt/backend",
              "echo BACK_IMAGE='"${BACK_IMAGE}"' > .env",
              "docker compose pull",
              "docker compose up -d",
              "docker image prune -f"
            ]' \
            --region "$AWS_REGION"
